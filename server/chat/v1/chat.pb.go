// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        v6.31.1
// source: chat/v1/chat.proto

package chatv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// --- messages ---
type User struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	DisplayName   string                 `protobuf:"bytes,2,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *User) Reset() {
	*x = User{}
	mi := &file_chat_v1_chat_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{0}
}

func (x *User) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *User) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

type ChatMessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	RoomId        string                 `protobuf:"bytes,2,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	Sender        *User                  `protobuf:"bytes,3,opt,name=sender,proto3" json:"sender,omitempty"`
	Text          string                 `protobuf:"bytes,4,opt,name=text,proto3" json:"text,omitempty"`
	SentAtUnix    int64                  `protobuf:"varint,5,opt,name=sent_at_unix,json=sentAtUnix,proto3" json:"sent_at_unix,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChatMessage) Reset() {
	*x = ChatMessage{}
	mi := &file_chat_v1_chat_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChatMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatMessage) ProtoMessage() {}

func (x *ChatMessage) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatMessage.ProtoReflect.Descriptor instead.
func (*ChatMessage) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{1}
}

func (x *ChatMessage) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ChatMessage) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *ChatMessage) GetSender() *User {
	if x != nil {
		return x.Sender
	}
	return nil
}

func (x *ChatMessage) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *ChatMessage) GetSentAtUnix() int64 {
	if x != nil {
		return x.SentAtUnix
	}
	return 0
}

type SendRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RoomId        string                 `protobuf:"bytes,1,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	Text          string                 `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SendRequest) Reset() {
	*x = SendRequest{}
	mi := &file_chat_v1_chat_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendRequest) ProtoMessage() {}

func (x *SendRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendRequest.ProtoReflect.Descriptor instead.
func (*SendRequest) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{2}
}

func (x *SendRequest) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *SendRequest) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

type SendResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       *ChatMessage           `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SendResponse) Reset() {
	*x = SendResponse{}
	mi := &file_chat_v1_chat_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendResponse) ProtoMessage() {}

func (x *SendResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendResponse.ProtoReflect.Descriptor instead.
func (*SendResponse) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{3}
}

func (x *SendResponse) GetMessage() *ChatMessage {
	if x != nil {
		return x.Message
	}
	return nil
}

type HistoryRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RoomId        string                 `protobuf:"bytes,1,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	Limit         int32                  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HistoryRequest) Reset() {
	*x = HistoryRequest{}
	mi := &file_chat_v1_chat_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HistoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HistoryRequest) ProtoMessage() {}

func (x *HistoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HistoryRequest.ProtoReflect.Descriptor instead.
func (*HistoryRequest) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{4}
}

func (x *HistoryRequest) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *HistoryRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type HistoryResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Messages      []*ChatMessage         `protobuf:"bytes,1,rep,name=messages,proto3" json:"messages,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HistoryResponse) Reset() {
	*x = HistoryResponse{}
	mi := &file_chat_v1_chat_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HistoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HistoryResponse) ProtoMessage() {}

func (x *HistoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HistoryResponse.ProtoReflect.Descriptor instead.
func (*HistoryResponse) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{5}
}

func (x *HistoryResponse) GetMessages() []*ChatMessage {
	if x != nil {
		return x.Messages
	}
	return nil
}

type StreamEnvelope struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Payload:
	//
	//	*StreamEnvelope_Message
	//	*StreamEnvelope_UserJoined
	//	*StreamEnvelope_UserLeft
	Payload       isStreamEnvelope_Payload `protobuf_oneof:"payload"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamEnvelope) Reset() {
	*x = StreamEnvelope{}
	mi := &file_chat_v1_chat_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamEnvelope) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamEnvelope) ProtoMessage() {}

func (x *StreamEnvelope) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamEnvelope.ProtoReflect.Descriptor instead.
func (*StreamEnvelope) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{6}
}

func (x *StreamEnvelope) GetPayload() isStreamEnvelope_Payload {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *StreamEnvelope) GetMessage() *ChatMessage {
	if x != nil {
		if x, ok := x.Payload.(*StreamEnvelope_Message); ok {
			return x.Message
		}
	}
	return nil
}

func (x *StreamEnvelope) GetUserJoined() *User {
	if x != nil {
		if x, ok := x.Payload.(*StreamEnvelope_UserJoined); ok {
			return x.UserJoined
		}
	}
	return nil
}

func (x *StreamEnvelope) GetUserLeft() *User {
	if x != nil {
		if x, ok := x.Payload.(*StreamEnvelope_UserLeft); ok {
			return x.UserLeft
		}
	}
	return nil
}

type isStreamEnvelope_Payload interface {
	isStreamEnvelope_Payload()
}

type StreamEnvelope_Message struct {
	Message *ChatMessage `protobuf:"bytes,1,opt,name=message,proto3,oneof"`
}

type StreamEnvelope_UserJoined struct {
	UserJoined *User `protobuf:"bytes,2,opt,name=user_joined,json=userJoined,proto3,oneof"`
}

type StreamEnvelope_UserLeft struct {
	UserLeft *User `protobuf:"bytes,3,opt,name=user_left,json=userLeft,proto3,oneof"`
}

func (*StreamEnvelope_Message) isStreamEnvelope_Payload() {}

func (*StreamEnvelope_UserJoined) isStreamEnvelope_Payload() {}

func (*StreamEnvelope_UserLeft) isStreamEnvelope_Payload() {}

var File_chat_v1_chat_proto protoreflect.FileDescriptor

const file_chat_v1_chat_proto_rawDesc = "" +
	"\n" +
	"\x12chat/v1/chat.proto\x12\achat.v1\"9\n" +
	"\x04User\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12!\n" +
	"\fdisplay_name\x18\x02 \x01(\tR\vdisplayName\"\x93\x01\n" +
	"\vChatMessage\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x17\n" +
	"\aroom_id\x18\x02 \x01(\tR\x06roomId\x12%\n" +
	"\x06sender\x18\x03 \x01(\v2\r.chat.v1.UserR\x06sender\x12\x12\n" +
	"\x04text\x18\x04 \x01(\tR\x04text\x12 \n" +
	"\fsent_at_unix\x18\x05 \x01(\x03R\n" +
	"sentAtUnix\":\n" +
	"\vSendRequest\x12\x17\n" +
	"\aroom_id\x18\x01 \x01(\tR\x06roomId\x12\x12\n" +
	"\x04text\x18\x02 \x01(\tR\x04text\">\n" +
	"\fSendResponse\x12.\n" +
	"\amessage\x18\x01 \x01(\v2\x14.chat.v1.ChatMessageR\amessage\"?\n" +
	"\x0eHistoryRequest\x12\x17\n" +
	"\aroom_id\x18\x01 \x01(\tR\x06roomId\x12\x14\n" +
	"\x05limit\x18\x02 \x01(\x05R\x05limit\"C\n" +
	"\x0fHistoryResponse\x120\n" +
	"\bmessages\x18\x01 \x03(\v2\x14.chat.v1.ChatMessageR\bmessages\"\xad\x01\n" +
	"\x0eStreamEnvelope\x120\n" +
	"\amessage\x18\x01 \x01(\v2\x14.chat.v1.ChatMessageH\x00R\amessage\x120\n" +
	"\vuser_joined\x18\x02 \x01(\v2\r.chat.v1.UserH\x00R\n" +
	"userJoined\x12,\n" +
	"\tuser_left\x18\x03 \x01(\v2\r.chat.v1.UserH\x00R\buserLeftB\t\n" +
	"\apayload2\xc2\x01\n" +
	"\vChatService\x123\n" +
	"\x04Send\x12\x14.chat.v1.SendRequest\x1a\x15.chat.v1.SendResponse\x12<\n" +
	"\aHistory\x12\x17.chat.v1.HistoryRequest\x1a\x18.chat.v1.HistoryResponse\x12@\n" +
	"\n" +
	"ChatStream\x12\x17.chat.v1.HistoryRequest\x1a\x17.chat.v1.StreamEnvelope0\x01B9Z7github.com/you/grpc-messenger/server/gen/chat/v1;chatv1b\x06proto3"

var (
	file_chat_v1_chat_proto_rawDescOnce sync.Once
	file_chat_v1_chat_proto_rawDescData []byte
)

func file_chat_v1_chat_proto_rawDescGZIP() []byte {
	file_chat_v1_chat_proto_rawDescOnce.Do(func() {
		file_chat_v1_chat_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_chat_v1_chat_proto_rawDesc), len(file_chat_v1_chat_proto_rawDesc)))
	})
	return file_chat_v1_chat_proto_rawDescData
}

var file_chat_v1_chat_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_chat_v1_chat_proto_goTypes = []any{
	(*User)(nil),            // 0: chat.v1.User
	(*ChatMessage)(nil),     // 1: chat.v1.ChatMessage
	(*SendRequest)(nil),     // 2: chat.v1.SendRequest
	(*SendResponse)(nil),    // 3: chat.v1.SendResponse
	(*HistoryRequest)(nil),  // 4: chat.v1.HistoryRequest
	(*HistoryResponse)(nil), // 5: chat.v1.HistoryResponse
	(*StreamEnvelope)(nil),  // 6: chat.v1.StreamEnvelope
}
var file_chat_v1_chat_proto_depIdxs = []int32{
	0, // 0: chat.v1.ChatMessage.sender:type_name -> chat.v1.User
	1, // 1: chat.v1.SendResponse.message:type_name -> chat.v1.ChatMessage
	1, // 2: chat.v1.HistoryResponse.messages:type_name -> chat.v1.ChatMessage
	1, // 3: chat.v1.StreamEnvelope.message:type_name -> chat.v1.ChatMessage
	0, // 4: chat.v1.StreamEnvelope.user_joined:type_name -> chat.v1.User
	0, // 5: chat.v1.StreamEnvelope.user_left:type_name -> chat.v1.User
	2, // 6: chat.v1.ChatService.Send:input_type -> chat.v1.SendRequest
	4, // 7: chat.v1.ChatService.History:input_type -> chat.v1.HistoryRequest
	4, // 8: chat.v1.ChatService.ChatStream:input_type -> chat.v1.HistoryRequest
	3, // 9: chat.v1.ChatService.Send:output_type -> chat.v1.SendResponse
	5, // 10: chat.v1.ChatService.History:output_type -> chat.v1.HistoryResponse
	6, // 11: chat.v1.ChatService.ChatStream:output_type -> chat.v1.StreamEnvelope
	9, // [9:12] is the sub-list for method output_type
	6, // [6:9] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_chat_v1_chat_proto_init() }
func file_chat_v1_chat_proto_init() {
	if File_chat_v1_chat_proto != nil {
		return
	}
	file_chat_v1_chat_proto_msgTypes[6].OneofWrappers = []any{
		(*StreamEnvelope_Message)(nil),
		(*StreamEnvelope_UserJoined)(nil),
		(*StreamEnvelope_UserLeft)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_chat_v1_chat_proto_rawDesc), len(file_chat_v1_chat_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_chat_v1_chat_proto_goTypes,
		DependencyIndexes: file_chat_v1_chat_proto_depIdxs,
		MessageInfos:      file_chat_v1_chat_proto_msgTypes,
	}.Build()
	File_chat_v1_chat_proto = out.File
	file_chat_v1_chat_proto_goTypes = nil
	file_chat_v1_chat_proto_depIdxs = nil
}
